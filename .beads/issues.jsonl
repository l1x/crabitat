{"id":"crb-1","title":"Implement Core Agent System","description":"Implement the Agent struct with fields for id, name, role, persona, and model configuration. Add agent instantiation and lifecycle management. Create trait for agent behavior and communication.","status":"closed","priority":2,"issue_type":"task","assignee":"agent","created_at":"2025-10-19T19:22:04.869476+02:00","updated_at":"2025-10-27T18:08:04.708698+01:00","closed_at":"2025-10-27T18:08:04.708698+01:00"}
{"id":"crb-2","title":"Implement Tool System Framework","description":"Complete the Tool trait implementation with proper argument handling. Implement concrete tools: ReadFileTool, ShellExecuteTool, etc. Add tool registry and permission system.","status":"open","priority":2,"issue_type":"task","assignee":"agent","created_at":"2025-10-19T19:22:07.705064+02:00","updated_at":"2025-10-19T19:22:07.705064+02:00"}
{"id":"crb-3","title":"Implement Task Management System","description":"Create Task struct with id, title, description, status, and priority. Implement task state management (Open, In Progress, Done, Blocked). Add task creation, updating, and persistence.","status":"open","priority":2,"issue_type":"task","assignee":"agent","created_at":"2025-10-19T19:22:10.642768+02:00","updated_at":"2025-10-19T19:22:10.642768+02:00"}
{"id":"crb-4","title":"Implement Workflow Engine","description":"Create state machine that drives task states through transitions. Implement workflow rules and validation logic. Add workflow persistence and state tracking.","status":"open","priority":2,"issue_type":"task","assignee":"agent","created_at":"2025-10-19T19:22:13.111252+02:00","updated_at":"2025-10-19T19:22:13.111252+02:00","dependencies":[{"issue_id":"crb-4","depends_on_id":"crb-3","type":"blocks","created_at":"2025-10-19T19:22:50.116808+02:00","created_by":"l1x"}]}
{"id":"crb-5","title":"Implement Project Container System","description":"Create Project struct to contain and organize tasks. Add project creation, task assignment to projects. Implement project-level operations and queries.","status":"open","priority":2,"issue_type":"task","assignee":"agent","created_at":"2025-10-19T19:22:15.49815+02:00","updated_at":"2025-10-19T19:22:15.49815+02:00","dependencies":[{"issue_id":"crb-5","depends_on_id":"crb-3","type":"blocks","created_at":"2025-10-19T19:22:51.685349+02:00","created_by":"l1x"}]}
{"id":"crb-6","title":"Create example code for agent creation","description":"Create example code showing how to create and configure an Agent instance, including ExternalId, ModelConfig, and tool setup. This should demonstrate the proper way to instantiate agents for the Crabitat system.","status":"open","priority":2,"issue_type":"task","assignee":"agent","created_at":"2025-10-19T21:26:59.228086+02:00","updated_at":"2025-10-19T21:26:59.228086+02:00"}
